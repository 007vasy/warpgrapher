name: Test

on:
  push:
    branches:
      - '**'
    tags-ignore:
      - '**'
    paths:
      - 'src/**'
      - 'tests/**'
      - 'examples/**'

jobs:
  test:
    runs-on: ubuntu-latest

    env:
      WG_NEO4J_HOST: 127.0.0.1
      WG_NEO4J_PORT: 7474
      WG_NEO4J_LOGIN: neo4j
      WG_NEO4J_PASS: testpass
      WG_COSMOS_HOST: ${{ secrets.WG_COSMOS_HOST }}
      WG_COSMOS_PORT: ${{ secrets.WG_COSMOS_PORT }}
      WG_COSMOS_LOGIN: ${{ secrets.WG_COSMOS_LOGIN }}
      WG_COSMOS_PASS: ${{ secrets.WG_COSMOS_PASS }}
      
    steps:
    - uses: actions/checkout@v2
      
    - name: Cache cargo registry
      uses: actions/cache@v1
      with:
        path: ~/.cargo/registry
        key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}

    - name: Cache cargo index
      uses: actions/cache@v1
      with:
        path: ~/.cargo/git
        key: ${{ runner.os }}-cargo-index-${{ hashFiles('**/Cargo.lock') }}

    - name: Cache cargo build
      uses: actions/cache@v1
      with:
        path: target
        key: ${{ runner.os }}-cargo-build-target-${{ hashFiles('**/Cargo.lock') }}
    
    - name: Cache cargo audit
      uses: actions/cache@v1
      with:
        path: rustbins
        key: cargo-audit
 
    - name: Check Featureless Build
      run: cargo check
      
    - name: Check Cosmos Build
      run: cargo check --features cosmos

    - name: Check Neo4J Build
      run: cargo check --features neo4j

    - name: Install Clippy
      run: rustup component add clippy

    - name: Run Linter
      run: cargo clippy --all-targets --all-features -- -D warnings
      
    - name: Start neo4j database
      run: docker run --rm -d --name neo4j -e NEO4J_AUTH="neo4j/testpass" -p 7474:7474 -p 7687:7687 neo4j:4.1
    
    - name: Run Tests (All Features)
      run: cargo test --all-features -- --test-threads=1

    - name: Stop neo4j database
      run: docker rm -f neo4j
